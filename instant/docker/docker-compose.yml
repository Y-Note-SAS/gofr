version: '3.3'

services:
  keycloak-test-local:
    container_name: keycloak-test-local
    image: keycloak/keycloak:20.0.2-2
    volumes:
      - ../../../resources/keycloak/themes/gofr:/opt/jboss/keycloak/themes/gofr
      - keycloak_data-test-local:/opt/jboss/keycloak/standalone/data
    command: ["start-dev", "--http-port=9090"]
    ports:
      - "9090:9090"
    environment:
      - KEYCLOAK_ADMIN_USER=admin
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin123
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin123
      - KC_HOSTNAME_STRICT=false #deactivate fixed hostname
      - KC_HOSTNAME_STRICT_HTTPS=false #For local access to console admin in start mode
      - KC_HTTP_ENABLED=true

      
      
  redis-test-local:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    container_name: redis-test-local
    restart: always
    volumes:
      - redis-data-test-local:/data

  fhir-test-local:
    container_name: hapi-fhir-test-local
    image: hapiproject/hapi:v5.5.2-distroless
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - redis-test-local
    environment:
      # add mcsd ig
      - hapi.fhir.implementationguides.mcsd.name=ihe.iti.mcsd
      - hapi.fhir.implementationguides.mcsd.version=3.5.0
      # bulk data export
      - hapi.fhir.bulk_export_enabled=true
      # subscriptions
      - hapi.fhir.subscription.resthook_enabled=true
      - hapi.fhir.subscription.websocket_enabled=true
      # partitioning
      - hapi.fhir.partitioning.enabled=true
      - hapi.fhir.partitioning.allow_references_across_partitions=true
      - hapi.fhir.partitioning.partitioning_include_in_search_hashes=false
      - hapi.fhir.enable_index_missing_fields=true
      - hapi.fhir.auto_create_placeholder_reference_targets=true
      - hapi.fhir.client_id_strategy=ANY
      - spring.jpa.properties.hibernate.search.enabled=true
      - spring.jpa.properties.hibernate.search.backend.type=lucene
      - spring.jpa.properties.hibernate.search.backend.analysis.configurer=ca.uhn.fhir.jpa.search.HapiLuceneAnalysisConfigurer
      - spring.jpa.properties.hibernate.search.backend.directory.type=local-filesystem
      - spring.jpa.properties.hibernate.search.backend.directory.root=target/lucenefiles
      - spring.jpa.properties.hibernate.search.backend.lucene_version=lucene_current
    volumes:
      - hapi-data-test-local:/data/hapi
      
  gofr-test-local:
    container_name: gofr-test-local
    build:  
      context: ../../../gofr
      dockerfile: instant/docker/Dockerfile
    depends_on:
      - fhir-test-local
      - keycloak-test-local 
    environment:
      # use gofr for authn/authz which is default
      # - app__idp=keycloak
      - mCSD__server__protocal=http
      - mCSD__server__host=fhir-test-local
      - mCSD__server__port=8080
      - mCSD__server__basePath=fhir
      - app__site__path=/src/gofr-backend/docker-site
      - app__core__path=/src/gofr-backend/lib
      - app__installed=${false}
      - app__idp=gofr
      - keycloak__baseURL=http://keycloak-test-local:9090/
      - REDIS_HOST=redis-test-local
      - keycloak__cleint_id=gofr
    ports:
      - "4000:4000"
    restart: always
    volumes: 
      - ../../../gofr:/src


networks:
# set app-wide default network
  default:
    name: test-local


volumes:
  redis-data-test-local:
  hapi-data-test-local:
  keycloak_data-test-local:
